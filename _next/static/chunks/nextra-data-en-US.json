{"/demo":{"title":"Demo","data":{"":""}},"/":{"title":"Introduction","data":{"":"A QR code plugin for Next.js, Create React App, Gatsby.js as well as React apps.","installation#Installation":"next-qrcode is available on npm. It can be installed with the following command:\nnpm install next-qrcode --save\nnext-qrcode is available on yarn as well. It can be installed with the following command:\nyarn add next-qrcode --save"}},"/use-qrcode/canvas":{"title":"💡 Canvas","data":{"":"","-code#👨‍💻 Code":"import React from 'react'\nimport { useQRCode } from 'next-qrcode'\n\nfunction App() {\nconst { Canvas } = useQRCode()\n\nreturn (\n<Canvas\ntext={'https://github.com/bunlong/next-qrcode'}\noptions={{\ntype: 'image/jpeg',\nquality: 0.3,\nerrorCorrectionLevel: 'M',\nmargin: 3,\nscale: 4,\nwidth: 200,\ncolor: {\ndark: '#010599FF',\nlight: '#FFBF60FF',\n},\n}}\n/>\n)\n}\n\nexport default App","-props#📖 Props":"Prop\tType\tRequire\tDescription\ttext\tstring\t✔️\tText/URL to encode.\toptions\toptions\t❌\tQR code options.","-options#📚 Options":"Prop\tType\tDefault\tRequire\tDescription\terrorCorrectionLevel\tstring\tM\t❌\tCorrection level. Possible values are low, medium, quartile, high or L, M, Q, H.\tmargin\tnumber\t4\t❌\tDefine how much wide the quiet zone should be.\tscale\tnumber\t4\t❌\tScale factor. A value of 1 means 1px per modules (black dots).\twidth\tnumber\t4\t❌\tForces a specific width for the output image. If width is too small to contain the qr symbol, this option will be ignored. Takes precedence over scale.\tcolor.dark\tstring\t#000000ff\t❌\tColor of dark module. Value must be in hex format (RGBA). Note: dark color should always be darker than color.light.\tcolor.light\tstring\t#ffffffff\t❌\tColor of light module. Value must be in hex format (RGBA)."}},"/use-qrcode/image":{"title":"💡 Image","data":{"":"","-code#👨‍💻 Code":"import React from 'react'\nimport { useQRCode } from 'next-qrcode'\n\nfunction App() {\nconst { Image } = useQRCode()\n\nreturn (\n<Image\ntext={'https://github.com/bunlong/next-qrcode'}\noptions={{\ntype: 'image/jpeg',\nquality: 0.3,\nerrorCorrectionLevel: 'M',\nmargin: 3,\nscale: 4,\nwidth: 200,\ncolor: {\ndark: '#010599FF',\nlight: '#FFBF60FF',\n},\n}}\n/>\n)\n}\n\nexport default App","-props#📖 Props":"Prop\tType\tRequire\tDescription\ttext\tstring\t✔️\tText/URL to encode.\toptions\tobject\t❌\tQR code options.","-options#📚 Options":"Prop\tType\tDefault\tRequire\tDescription\terrorCorrectionLevel\tstring\tM\t❌\tCorrection level. Possible values are low, medium, quartile, high or L, M, Q, H.\tmargin\tnumber\t4\t❌\tDefine how much wide the quiet zone should be.\tscale\tnumber\t4\t❌\tScale factor. A value of 1 means 1px per modules (black dots).\twidth\tnumber\t4\t❌\tForces a specific width for the output image. If width is too small to contain the qr symbol, this option will be ignored. Takes precedence over scale.\tcolor.dark\tstring\t#000000ff\t❌\tColor of dark module. Value must be in hex format (RGBA). Note: dark color should always be darker than color.light.\tcolor.light\tstring\t#ffffffff\t❌\tColor of light module. Value must be in hex format (RGBA)."}},"/use-qrcode/svg":{"title":"💡 SVG","data":{"":"","-code#👨‍💻 Code":"import React from 'react'\nimport { useQRCode } from 'next-qrcode'\n\nfunction App() {\nconst { SVG } = useQRCode()\n\nreturn (\n<SVG\ntext={'https://github.com/bunlong/next-qrcode'}\noptions={{\nmargin: 2,\nwidth: 200,\ncolor: {\ndark: '#010599FF',\nlight: '#FFBF60FF',\n},\n}}\n/>\n)\n}\n\nexport default App","-props#📖 Props":"Prop\tType\tRequire\tDescription\ttext\tstring\t✔️\tText/URL to encode.\toptions\toptions\t❌\tQR code options.","-options#📚 Options":"Prop\tType\tDefault\tRequire\tDescription\tmargin\tnumber\t4\t❌\tDefine how much wide the quiet zone should be.\twidth\tnumber\t4\t❌\tForces a specific width for the output image. If width is too small to contain the qr symbol, this option will be ignored. Takes precedence over scale.\tcolor.dark\tstring\t#000000ff\t❌\tColor of dark module. Value must be in hex format (RGBA). Note: dark color should always be darker than color.light.\tcolor.light\tstring\t#ffffffff\t❌\tColor of light module. Value must be in hex format (RGBA)."}}}